{
    "sparql_endpoint": "https://dbpedia.org/sparql",
    "template_mode": "statistics",
    "title": "Best-selling women in music",
    "color_code": [
        "#39c6b4",
        "#17cf31"
    ],
    "user_name": "VeronicaCopparoni",
    "id": "1686643551.648723",
    "subtitle": "",
    "curator": "Veronica Copparoni, Tatiana Giacobbo",
    "description": "",
    "dynamic_elements": [
        {
            "position": 0,
            "operations": [],
            "type": "count",
            "count_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \r\nPREFIX dbo: <http://dbpedia.org/ontology/>\r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#> \r\nPREFIX dbp: <http://dbpedia.org/property/>\r\n\r\n \r\n\r\nSELECT (COUNT(?list) AS ?count)\r\nWHERE\r\n{\r\n?list a owl:Thing .\r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n}",
            "count_label": "Number of albums by women that sold more than 10mln",
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 1,
            "operations": [],
            "type": "table",
            "table_title": "Best-selling women in music",
            "table_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\nSELECT DISTINCT ?name ?data ?datam ?data1\r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?name .\r\n?person dbo:birthDate ?data .\r\nOPTIONAL { \r\n?person dbo:deathDate ?datam .  }\r\n?person dbo:activeYearsStartYear ?data1 .\r\n }\r\nORDER BY ?data1",
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 2,
            "operations": [],
            "type": "map",
            "map_title": "Where were they born?",
            "map_points_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\n \r\n\r\nSELECT DISTINCT ?name ?point ?lat ?long\r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?name .\r\n?person dbo:birthPlace ?luogo .\r\n?luogo georss:point ?point ; geo:lat ?lat ; geo:long ?long . \r\n}\r\nGROUP BY ?luogo",
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 3,
            "operations": [],
            "type": "chart",
            "chart_type": "doughnutchart",
            "chart_title": "Awards wins",
            "chart_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\nSELECT DISTINCT ?label ?count\r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?label .\r\n?person dbp:awards ?what .  \r\nFILTER (REGEX (?what, \"awards\", \"I\"))\r\n?what dbp:nominations ?nominations .\r\n?what dbp:wins ?count .\r\n}\r\nGROUP BY ?label\r\nORDER BY DESC ( ?count)",
            "chart_series": "",
            "chart_legend": {
                "x": "",
                "y": ""
            },
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 4,
            "operations": [],
            "type": "chart",
            "chart_type": "barchart",
            "chart_title": "Number of nominations received ",
            "chart_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\nSELECT DISTINCT ?label ?count\r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?label .\r\n?person dbp:awards ?what .  \r\nFILTER (REGEX (?what, \"awards\", \"I\"))\r\n?what dbp:nominations ?count .\r\n?what dbp:wins ?eins .\r\n}\r\nGROUP BY ?label\r\nORDER BY DESC (?count)",
            "chart_series": "",
            "chart_legend": {
                "x": "Artists",
                "y": "Nominations"
            },
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 5,
            "operations": [],
            "type": "textsearch",
            "textsearch_userinput": "madonna",
            "textsearch_title": "Women",
            "textsearch_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\nSELECT DISTINCT ?Name ?datam ?data1 ?wiki\r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?Name .\r\n?person dbo:birthDate ?BirthDate .\r\nOPTIONAL { \r\n?person dbo:deathDate ?datam .  }\r\n?person dbo:activeYearsStartYear ?data1 .\r\nFILTER regex(str(?Name), <<searchterm>>, 'i') \r\nOPTIONAL { \r\n?person foaf:homepage ?sito . }\r\n?wiki  foaf:primaryTopic ?person\r\n }",
            "textsearch": {
                "Name": [
                    "wiki"
                ]
            },
            "extra_queries": [],
            "map_filters": []
        },
        {
            "position": 6,
            "operations": [],
            "type": "action",
            "action_title": "wiki",
            "action_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX dbo: <http://dbpedia.org/ontology/> \r\nPREFIX dbr: <http://dbpedia.org/resource/>\r\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\r\nPREFIX dbp: <http://dbpedia.org/property/>\r\nPREFIX commons: <http://commons.wikimedia.org/wiki/Special:FilePath/>\r\n\r\nSELECT DISTINCT ?Name ?BirthDate ?datam ?data1 \r\nWHERE { \r\n?list a owl:Thing . \r\n?list ?relation dbr:List_of_best-selling_albums_by_women . \r\n?person a dbo:Animal ; a dbo:Person .\r\ndbr:List_of_best-selling_albums_by_women  ?boh ?person .\r\n?person dbp:name ?Name .\r\n?person dbo:birthDate ?BirthDate .\r\nOPTIONAL { \r\n?person dbo:deathDate ?datam .  }\r\n?person dbo:activeYearsStartYear ?data1 .\r\nFILTER regex(str(?Name), <<searchterm>>, 'i') \r\nOPTIONAL { \r\n?person foaf:homepage ?sito . }\r\nOPTIONAL { \r\n?wiki foaf:primaryTopic ?person  } \r\nFILTER regex(str(?wiki), <<item>>, 'i') \r\n\r\n }",
            "extra_queries": [],
            "map_filters": []
        }
    ]
}